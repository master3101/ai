import numpy as nm
import matplotlib.pyplot as mtp
import pandas as pd
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import confusion_matrix
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.impute import SimpleImputer

dataset = pd.read_csv('purchase.csv')
x = dataset.iloc[:, [2, 3]].values
y = dataset.iloc[:, 3].values

# Convert to numeric and handle errors
x = pd.DataFrame(x).apply(pd.to_numeric, errors='coerce').values
imputer = SimpleImputer(strategy='mean')
x = imputer.fit_transform(x)
if pd.isnull(x).any():
    print("Still NaNs after imputation; consider revising data cleaning strategy.")
else:
    print("All NaNs handled correctly.")
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)
classifier = GaussianNB()
classifier.fit(x_train, y_train)
y_pred = classifier.predict(x_test)
cm = confusion_matrix(y_test, y_pred)
print(cm)
